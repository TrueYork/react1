{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","HOC/withAuthRedirect.js","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","getIsAuth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","classes","dialogsItems","src","ava","alt","activeClassName","active","name","Message","sender","messageOut","message","messageIn","maxLength100","maxLengthCreator","TextArea","Element","Dialogs","сontactListHtml","dialogState","contacts","map","contact","key","messageListHtml","messages","ownerId","dialogs","AddMessageFormRedux","onSubmit","values","sendMessage","text","reduxForm","form","handleSubmit","Field","component","validate","required","placeholder","compose","messagesPage"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,UAAY,2BAA2B,WAAa,4BAA4B,KAAO,wB,+ICI3PC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQC,YAAUF,KAGTG,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,sHCD9DM,E,uKAVP,IAAIC,EAAO,YAAcN,KAAKC,MAAMM,GACpC,OACI,yBAAKC,UAAWC,IAAQC,cACpB,yBAAKC,IAAKX,KAAKC,MAAMW,IAAKC,IAAI,eAC9B,kBAAC,IAAD,CAASX,GAAII,EAAMQ,gBAAiBL,IAAQM,QAASf,KAAKC,MAAMe,W,GANvDb,IAAML,WCmBhBmB,E,uKAlBP,OAA0B,IAAtBjB,KAAKC,MAAMiB,OAEP,yBAAKV,UAAWC,IAAQU,YACpB,8BAAOnB,KAAKC,MAAMiB,QAClB,2BAAIlB,KAAKC,MAAMmB,UAKnB,yBAAKZ,UAAWC,IAAQY,WACpB,8BAAOrB,KAAKC,MAAMiB,QAClB,2BAAIlB,KAAKC,MAAMmB,c,GAbbjB,IAAML,W,iCCKtBwB,EAAeC,YAAiB,KAEhCC,EAAWC,YAAQ,YAEnBC,E,uKAEQ,IAAD,OACDC,EAAkB3B,KAAKC,MAAM2B,YAAYC,SAASC,KAAI,SAACC,GAAD,OACtD,kBAAC,EAAD,CAAYf,KAAMe,EAAQf,KAAMgB,IAAKD,EAAQxB,GAAIA,GAAIwB,EAAQxB,GAAIK,IAAKmB,EAAQnB,SAG9EqB,EAAkBjC,KAAKC,MAAM2B,YAAYM,SAASJ,KAAI,SAACV,GAAD,OACtD,kBAAC,EAAD,CAASF,OAAQE,EAAQe,QAASf,QAASA,EAAQA,QAASY,IAAKZ,EAAQb,QAO7E,OACI,yBAAKC,UAAWC,IAAQ2B,SAEpB,yBAAK5B,UAAWC,IAAQC,cACnBiB,GAEL,yBAAKnB,UAAWC,IAAQyB,UACnBD,GAEL,8BAGA,6BACI,kBAACI,EAAD,CAAqBC,SAjBd,SAACC,GAChB,EAAKtC,MAAMuC,YAAYD,EAAOE,e,GAZpBtC,IAAML,WAiDtBuC,EAAsBK,YAAU,CAClCC,KAAM,wBADkBD,EAbL,SAACzC,GACpB,OACI,0BAAMqC,SAAUrC,EAAM2C,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWtB,EAAUuB,SAAU,CAACC,IAAU1B,GAAeN,KAAM,OAAQiC,YAAa,0BAE/F,6BACI,6CAUDvB,I,iCCnDAwB,sBACX9C,aARmB,SAACV,GAEpB,MAAO,CACHkC,YAAalC,EAAMyD,gBAKE,CAACX,kBAC1B3C,IAFWqD,CAGbxB","file":"static/js/4.e850d24f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1faG1\",\"dialogsItems\":\"Dialogs_dialogsItems__1jLOh\",\"active\":\"Dialogs_active__ZAyil\",\"messages\":\"Dialogs_messages__1pF1v\",\"messageIn\":\"Dialogs_messageIn__3jtVd\",\"messageOut\":\"Dialogs_messageOut__UIeRn\",\"text\":\"Dialogs_text__FQ5vz\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth} from \"../Redux/authSelector\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: getIsAuth(state)\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from 'react';\r\nimport classes from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass DialogItem extends React.Component {\r\n    render() {\r\n        let path = \"/dialogs/\" + this.props.id;\r\n        return (\r\n            <div className={classes.dialogsItems}>\r\n                <img src={this.props.ava} alt='contactAva'/>\r\n                <NavLink to={path} activeClassName={classes.active}>{this.props.name}</NavLink>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from '../Dialogs.module.css';\r\n\r\nclass Message extends React.Component {\r\n    render() {\r\n        if (this.props.sender === 0) {\r\n            return (\r\n                <div className={classes.messageOut}>\r\n                    <span>{this.props.sender}</span>\r\n                    <p>{this.props.message}</p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className={classes.messageIn}>\r\n                    <span>{this.props.sender}</span>\r\n                    <p>{this.props.message}</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\nimport {Element} from \"../Common/FormControls/formControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst TextArea = Element(\"textarea\");\r\n\r\nclass Dialogs extends React.Component {\r\n\r\n    render() {\r\n        let сontactListHtml = this.props.dialogState.contacts.map((contact) =>\r\n            <DialogItem name={contact.name} key={contact.id} id={contact.id} ava={contact.ava}/>\r\n        );\r\n\r\n        let messageListHtml = this.props.dialogState.messages.map((message) =>\r\n            <Message sender={message.ownerId} message={message.message} key={message.id}/>\r\n        );\r\n\r\n        const addMessage = (values) => {\r\n            this.props.sendMessage(values.text)\r\n        };\r\n\r\n        return (\r\n            <div className={classes.dialogs}>\r\n\r\n                <div className={classes.dialogsItems}>\r\n                    {сontactListHtml}\r\n                </div>\r\n                <div className={classes.messages}>\r\n                    {messageListHtml}\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addMessage}/>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} validate={[required, maxLength100]} name={\"text\"} placeholder={\"Type a message here.\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessage} from \"../../Redux/messageReducer\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps= (state) => {\r\n\r\n    return {\r\n        dialogState: state.messagesPage\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}