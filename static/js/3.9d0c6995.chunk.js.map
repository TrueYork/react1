{"version":3,"sources":["HOC/withAuthRedirect.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Redux/profileSelector.js","Components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","getIsAuth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","small","fullName","aboutMe","Preloader","Post","item","alt","message","likes","maxLength10","maxLengthCreator","TextArea","Element","MyPosts","postDataHtml","posts","map","post","key","id","likesCount","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","text","PureComponent","reduxForm","form","handleSubmit","Field","name","placeholder","component","validate","required","profilePage","Profile","MyPostsContainer","getProfile","getProfileStatus","ProfileContainer","userId","match","params","currentActiveUserId","history","push","obtainProfileDataThunkCreator","getProfileStatusThunkCreator","updateProfileStatusThunkCreator","compose","getUserId","withRouter"],"mappings":"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","file":"static/js/3.9d0c6995.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth} from \"../Redux/authSelector\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: getIsAuth(state)\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2eRco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__c7V0W\",\"posts\":\"MyPosts_posts__2vEWx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Gz73\"};","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (<div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deActivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n//import ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n{/*            <div>\r\n                <img\r\n                    src='https://c1.staticflickr.com/9/8534/29490724665_072b0acf7a_b.jpg'\r\n                    alt='profile background'></img>\r\n            </div>*/}\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.small}/>\r\n                <div>\r\n                    {profile.fullName}\r\n                </div>\r\n                <div>\r\n                    {profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    <ProfileStatusHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://cdn.pixabay.com/photo/2016/12/13/16/17/dancer-1904467_960_720.png' alt='userPic' />\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likes}</span> like(s)\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {PureComponent} from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {Element} from \"../../Common/FormControls/formControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst TextArea = Element(\"textarea\");\r\n\r\nclass MyPosts extends PureComponent {\r\n    render() {\r\n        //console.log(\"MyPost render\");\r\n        let postDataHtml = this.props.posts.map((post) =>\r\n            <Post message={post.post} key={post.id} likes={post.likesCount}/>\r\n        );\r\n\r\n        const addPost = (values) => {\r\n            this.props.addPost(values.text)\r\n        };\r\n\r\n        return (\r\n            <div className={classes.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={addPost}/>\r\n                <div className={classes.posts}>\r\n                    {postDataHtml}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"text\"} placeholder={\"What's new?\"} component={TextArea} validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n    form: \"addNewPostForm\"\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps= (state) => {\r\n\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {addPost})(MyPosts);","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    //console.log(\"profile render\")\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","export const getProfile = (state) => {\r\n    return state.profilePage.profile;\r\n};\r\n\r\nexport const getProfileStatus = (state) => {\r\n    return state.profilePage.status;\r\n};","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileStatusThunkCreator,\r\n    obtainProfileDataThunkCreator,\r\n    updateProfileStatusThunkCreator\r\n} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getIsAuth, getUserId} from \"../../Redux/authSelector\";\r\nimport {getProfile, getProfileStatus} from \"../../Redux/profileSelector\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.currentActiveUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.obtainProfileDataThunkCreator(userId);\r\n        this.props.getProfileStatusThunkCreator(userId);\r\n    }\r\n\r\n    render() {\r\n        //console.log('render PROFILE');\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                         updateStatus={this.props.updateProfileStatusThunkCreator}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE');\r\n    return ({\r\n    profile: getProfile(state),\r\n    status: getProfileStatus(state),\r\n    currentActiveUserId: getUserId(state),\r\n    isAuth: getIsAuth(state)\r\n\r\n});\r\n};\r\n\r\n\r\n/*export default compose(\r\n    connect(mapStateToProps, {\r\n        obtainProfileDataThunkCreator,\r\n        getProfileStatusThunkCreator,\r\n        updateProfileStatusThunkCreator\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);*/\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        obtainProfileDataThunkCreator,\r\n        getProfileStatusThunkCreator,\r\n        updateProfileStatusThunkCreator\r\n    }),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}