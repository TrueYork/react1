{"version":3,"sources":["API/api.js","Assets/Images/userPicDefault.png","Redux/messageReducer.js","Components/Users/Users.module.css","Assets/Images/loaderTransparentRed.svg","Components/NavBar/NavBar.module.css","serviceWorker.js","Components/NavBar/NavBar.jsx","Components/News/News.jsx","Components/Music/Music.jsx","Components/Settings/Settings.jsx","Utils/objectHelper.js","Redux/usersReducer.js","Components/Common/Paginator/Paginator.jsx","Components/Users/User.jsx","Components/Users/Users.jsx","Redux/userSelectors.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Redux/authReducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Redux/initReducer.js","Redux/initSelectors.js","Redux/reduxStore.js","HOC/withSuspense.jsx","App.js","index.js","Redux/authSelector.js","Components/Common/FormControls/formControls.js","Utils/Validators/validators.js","Components/Common/FormControls/formControls.module.css","Components/Common/Preloader/Preloader.jsx","Components/Common/Paginator/Paginator.module.css","App.module.css","Components/Header/Header.module.css","Redux/profileReducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUserList","page","pageSize","get","unfollowUser","userId","delete","followUser","post","authAPI","getAuthData","login","email","password","rememberMe","captcha","logout","profileAPI","getProfileByUserId","getStatus","setStatus","status","put","savePhoto","file","formData","FormData","append","saveProfile","profile","securityAPI","getCaptchaURL","module","exports","initialState","messages","id","message","ownerId","contacts","name","ava","sendMessage","text","type","newOutMessage","messageReducer","state","action","newMessage","length","Boolean","window","location","hostname","match","NavBar","className","classes","nav","item","to","activeClassName","activeLink","React","Component","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","totalUsersCount","currentPage","isFetching","isOperationInProgress","fake","follow","unfollow","toggleIsFetching","toggleInProgressOperation","acceptFollowUnfollowTemplateThunkCreator","dispatch","apiMethod","actionCreator","a","data","resultCode","userReducer","followed","filter","Paginator","onPageChange","totalItemsCount","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","classnames","selectedPage","pageNumber","key","e","User","user","acceptFollowThunkCreator","acceptUnfollowThunkCreator","src","photos","small","userPhoto","disabled","some","Users","props","getUsers","usersPage","getUsersSuperSelector","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsOperationInProgress","UsersContainer","pageN","getUsersThunkCreator","this","Preloader","compose","connect","bind","response","totalCnt","totalCount","Header","header","alt","loginBlock","isAuth","doLogoutThunkCreator","SET_USER_DATA","SET_CAPTCHA_URL","captchaURL","setAuthData","setCaptchaURL","doAuthThunkCreator","getCaptchaURLThunkCreator","url","authReducer","HeaderContainer","getIsAuth","getLogin","Input","Element","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","formSummaryError","doLoginThunkCreator","errorMessage","stopSubmit","_error","isInitializing","initReducer","getIsInitializing","app","reducers","combineReducers","profilePage","profileReducer","messagesPage","usersReducer","auth","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","alert","initializeAppThunkCreator","addEventListener","removeEventListener","initialized","appWrapper","appWrapperContent","exact","from","path","render","AppContainer","withRouter","then","MainApp","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","getUserId","input","meta","touched","hasError","formControl","placeholder","component","validate","value","maxLengthCreator","maxLength","preLoader","ADD_POST","REMOVE_POST","SET_USER_PROFILE","SET_STATUS","SET_PHOTO","posts","likesCount","addPost","newPostText","obtainProfileDataThunkCreator","getProfileStatusThunkCreator","updateProfileStatusThunkCreator","savePhotoThunkCreator","saveProfileThunkCreator","getState","Promise","reject","newPost","postId"],"mappings":"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","file":"static/js/main.65f5c06d.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"86c295e4-1750-4b9b-ba10-ce0fc7df952b\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUserList(page = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${page}&count=${pageSize}`)\r\n    },\r\n\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    getAuthData() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    login(email, password, rememberMe = false, captcha) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfileByUserId(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n\r\n    setStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n\r\n    savePhoto(file) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    },\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n};","module.exports = __webpack_public_path__ + \"static/media/userPicDefault.db046923.png\";","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi', ownerId: 2},\r\n        {id: 2, message: 'How are you?', ownerId: 2},\r\n        {id: 3, message: 'Yo!', ownerId: 0}\r\n    ],\r\n    contacts: [\r\n        {id: 1, name: 'Vasiliy', ava: 'https://cdn3.iconfinder.com/data/icons/business-avatar-1/512/3_avatar-512.png'},\r\n        {id: 2, name: 'Pavel', ava: 'https://cdn.iconscout.com/icon/free/png-256/avatar-372-456324.png'},\r\n        {\r\n            id: 3,\r\n            name: 'Vlad',\r\n            ava: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRoZ_XuJ5OUEFVkpbHEfMTnZcvS3xBhtVMlTXsY5LWBuJDp2SR4&usqp=CAU'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Andrey',\r\n            ava: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSFD1Ofi7-DsfgVE7CojIqMuNGYEN1N4dGyec3hJQebtISancyF&usqp=CAU'\r\n        }\r\n    ],\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id: state.messages.length + 1,\r\n                message: action.newOutMessage,\r\n                ownerId: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessage = (text) => ({\r\n    type: SEND_MESSAGE,\r\n    newOutMessage: text\r\n});\r\n\r\nexport default messageReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1D5iS\"};","module.exports = __webpack_public_path__ + \"static/media/loaderTransparentRed.27fc27b6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__2L65F\",\"item\":\"NavBar_item__3Di64\",\"activeLink\":\"NavBar_activeLink__3GfJ7\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport classes from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass NavBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className={classes.nav}>\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink>\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nclass News extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                News\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nclass Music extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Music\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nclass Settings extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Settings\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(item => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item;\r\n    })\r\n};","import {usersAPI} from \"../API/api\";\r\nimport {updateObjectInArray} from \"../Utils/objectHelper\";\r\n\r\nconst FOLLOW = 'social-network/users/FOLLOW';\r\nconst UNFOLLOW = 'social-network/users/UNFOLLOW';\r\nconst SET_USERS = 'social-network/users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'social-network/users/SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network/users/SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network/users/TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IN_PROGRESS_OPERATION = 'social-network/users/TOGGLE-IN-PROGRESS-OPERATION';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isOperationInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case \"FAKE\":\r\n            return {...state, fake: state.fake + 1};\r\n\r\n/*        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            };*/\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.id, \"id\", {followed: true})\r\n            };\r\n\r\n/*        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            };*/\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.id, \"id\", {followed: false})\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount};\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n\r\n        case TOGGLE_IN_PROGRESS_OPERATION:\r\n            return {\r\n                ...state,\r\n                isOperationInProgress: action.isOperationInProgress\r\n                    ? [...state.isOperationInProgress, action.userId]\r\n                    : state.isOperationInProgress.filter(id => id !== action.userId)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => ({\r\n    type: FOLLOW,\r\n    id: userId\r\n});\r\n\r\nexport const unfollow = (userId) => ({\r\n    type: UNFOLLOW,\r\n    id: userId\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users: users\r\n});\r\n\r\nexport const setCurrentPage = (curPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage: curPage\r\n});\r\n\r\nexport const setTotalUsersCount = (totalCnt) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: totalCnt\r\n});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching: isFetching\r\n});\r\n\r\nexport const toggleInProgressOperation = (isOperationInProgress, userId) => ({\r\n    type: TOGGLE_IN_PROGRESS_OPERATION,\r\n    isOperationInProgress: isOperationInProgress,\r\n    userId: userId\r\n});\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    let response = await usersAPI.getUserList(currentPage, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalUsersCount(response.data.totalCount));\r\n};\r\n\r\n/*export const acceptUnfollowThunkCreator = (userId) => async (dispatch) => {\r\n    dispatch(toggleInProgressOperation(true, userId));\r\n    let response = await usersAPI.unfollowUser(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(unfollow(userId));\r\n    }\r\n    dispatch(toggleInProgressOperation(false, userId));\r\n};*/\r\n\r\nexport const acceptUnfollowThunkCreator = (userId) => (dispatch) => {\r\n    acceptFollowUnfollowTemplateThunkCreator(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollow);\r\n};\r\n\r\n/*export const acceptFollowThunkCreator = (userId) => async (dispatch) => {\r\n    dispatch(toggleInProgressOperation(true, userId));\r\n    let response = await usersAPI.followUser(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(follow(userId));\r\n    }\r\n    dispatch(toggleInProgressOperation(false, userId));\r\n};*/\r\n\r\nexport const acceptFollowThunkCreator = (userId) => (dispatch) => {\r\n    acceptFollowUnfollowTemplateThunkCreator(dispatch, userId, usersAPI.followUser.bind(usersAPI), follow);\r\n};\r\n\r\nexport const acceptFollowUnfollowTemplateThunkCreator = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleInProgressOperation(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleInProgressOperation(false, userId));\r\n};\r\n\r\nexport default userReducer;","import React, {useState} from 'react';\r\nimport classes from './Paginator.module.css';\r\nimport classnames from \"classnames\";\r\n\r\nlet Paginator = ({currentPage, onPageChange, totalItemsCount, pageSize, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={classes.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n            {pages.filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber).map((page) => {\r\n                return <span className={classnames({\r\n                    [classes.selectedPage]: currentPage === page\r\n                }, classes.pageNumber)}\r\n                             key={page}\r\n                             onClick={(e) => {\r\n                                 onPageChange(page);\r\n                             }}>{page}</span>\r\n            })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport classes from './Users.module.css';\r\nimport userPhoto from '../../Assets/Images/userPicDefault.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, isOperationInProgress, acceptFollowThunkCreator, acceptUnfollowThunkCreator}) => {\r\n\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                 className={classes.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={isOperationInProgress.some(id => id === user.id)} onClick={() => {\r\n                                acceptUnfollowThunkCreator(user.id)\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={isOperationInProgress.some(id => id === user.id)} onClick={() => {\r\n                                acceptFollowThunkCreator(user.id)\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                 <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, onPageChange, totalUsersCount, pageSize, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChange={onPageChange} totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                props.users.map(user => <User user={user} isOperationInProgress={props.isOperationInProgress}\r\n                                              acceptFollowThunkCreator={props.acceptFollowThunkCreator}\r\n                                              acceptUnfollowThunkCreator={props.acceptUnfollowThunkCreator}\r\n                                              key={user.id}/>)\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return getUsers(state).filter(u => true);\r\n};\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getIsOperationInProgress = (state) => {\r\n    return state.usersPage.isOperationInProgress;\r\n};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    acceptFollowThunkCreator, getUsersThunkCreator,\r\n    toggleInProgressOperation,\r\n    acceptUnfollowThunkCreator\r\n} from \"../../Redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n//import {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getIsOperationInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSuperSelector\r\n} from \"../../Redux/userSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.getUsersThunkCreator(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChange = (pageN) => {\r\n        let {pageSize} = this.props.pageSize;\r\n        this.props.getUsersThunkCreator(pageN, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage} users={this.props.users} onPageChange={this.onPageChange}\r\n                   acceptFollowThunkCreator={this.props.acceptFollowThunkCreator}\r\n                   acceptUnfollowThunkCreator={this.props.acceptUnfollowThunkCreator}\r\n                   isOperationInProgress={this.props.isOperationInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\n/*const mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        isOperationInProgress: state.usersPage.isOperationInProgress\r\n    }\r\n};*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(\"mapStateToProps USERS\");\r\n    return {\r\n        //users: getUsersSelector(state),\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isOperationInProgress: getIsOperationInProgress(state)\r\n    }\r\n};\r\n\r\n/*\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        acceptFollowThunkCreator,\r\n        acceptUnfollowThunkCreator,\r\n        toggleInProgressOperation,\r\n        getUsersThunkCreator\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)*/\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        acceptFollowThunkCreator,\r\n        acceptUnfollowThunkCreator,\r\n        toggleInProgressOperation,\r\n        getUsersThunkCreator\r\n    })\r\n)(UsersContainer)\r\n","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://tppwebsolutions.com/wp-content/uploads/logo-demo3.png' alt='just a logo'/>\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth ? <div>{props.login} - <button onClick={props.doLogoutThunkCreator}>Logout</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET-USER-DATA';\r\nconst SET_CAPTCHA_URL = 'social-network/auth/SET-CAPTCHA-URL';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    captchaURL: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n        case SET_CAPTCHA_URL:\r\n            return {...state, ...action.data};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n});\r\n\r\nexport const setCaptchaURL = (captchaURL) => ({\r\n    type: SET_CAPTCHA_URL,\r\n    data: {captchaURL}\r\n});\r\n\r\nexport const doAuthThunkCreator = () => async (dispatch) => {\r\n    let response = await authAPI.getAuthData();\r\n    if (response.data.resultCode === 0) {\r\n        let {email, id, login} = response.data.data;\r\n        dispatch(setAuthData(id, email, login, true))\r\n    }\r\n};\r\n\r\nexport const doLoginThunkCreator = (email, password, rememberMe, captcha = null) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(doAuthThunkCreator())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaURLThunkCreator());\r\n        }\r\n    }\r\n    let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : \"Common error\";\r\n    dispatch(stopSubmit(\"login\", {_error: errorMessage}));\r\n};\r\n\r\nexport const doLogoutThunkCreator = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport const getCaptchaURLThunkCreator = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaURL();\r\n    let captchaURL = response.data.url;\r\n    dispatch(setCaptchaURL(captchaURL));\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {doLogoutThunkCreator} from \"../../Redux/authReducer\";\r\nimport {getIsAuth, getLogin} from \"../../Redux/authSelector\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getLogin(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, {doLogoutThunkCreator})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Element} from \"../Common/FormControls/formControls\";\r\nimport {required} from \"../../Utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {doLoginThunkCreator} from \"../../Redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"../Common/FormControls/formControls.module.css\"\r\nimport {getCaptchaURL, getIsAuth} from \"../../Redux/authSelector\";\r\n\r\nconst Input = Element(\"input\");\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n       props.doLoginThunkCreator(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaURL}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"E-mail\", \"email\", Input, [required])}\r\n            {createField(\"Password\", \"password\", Input, [required], {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", Input, [], {type: \"checkbox\"}, \"Remember me\")}\r\n\r\n            { captchaURL && <img src={captchaURL}/>}\r\n            { captchaURL && createField(null, \"captcha\", Input, [required])}\r\n\r\n                { error && <div className={classes.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login' //name of the form in store\r\n})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    captchaURL: getCaptchaURL(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, {doLoginThunkCreator})(Login);","import {doAuthThunkCreator} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZING = 'SET-INITIALIZING';\r\n\r\nlet initialState = {\r\n    isInitializing: false\r\n};\r\n\r\nconst initReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_INITIALIZING:\r\n            return {...state, isInitializing: true};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setInitializing = () => ({type: SET_INITIALIZING});\r\n\r\nexport const initializeAppThunkCreator = () => {\r\n    return (dispatch) => {\r\n        let dispatchPromise = dispatch(doAuthThunkCreator());\r\n        //debugger;\r\n        dispatchPromise.then(() => {\r\n            dispatch(setInitializing());\r\n        });\r\n    }\r\n};\r\n\r\nexport default initReducer;","export const getIsInitializing = (state) => {\r\n    return state.app.isInitializing;\r\n};","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport initReducer from \"./initReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messageReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: initReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\n//window.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <React.Suspense fallback={<div>Loading...</div>}>\r\n                <Component {...props}/>\r\n            </React.Suspense>\r\n        )\r\n    }\r\n};","import React from 'react';\nimport classes from './App.module.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport News from \"./Components/News/News\";\nimport Music from \"./Components/Music/Music\";\nimport Settings from \"./Components/Settings/Settings\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport LoginPage from \"./Components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeAppThunkCreator} from \"./Redux/initReducer\";\nimport Preloader from \"./Components/Common/Preloader/Preloader\";\nimport {getIsInitializing} from \"./Redux/initSelectors\";\nimport {compose} from \"redux\";\nimport store from \"./Redux/reduxStore\";\nimport {withSuspense} from \"./HOC/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n\n    catchAllUnhandledErrors = () => {\n        alert(\"Some error occured.\");\n        //console.error(promiseRejectionEvent);\n    };\n\n    componentDidMount() {\n        this.props.initializeAppThunkCreator();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className={classes.appWrapper}>\n                <HeaderContainer/>\n                <NavBar/>\n                <div className={classes.appWrapperContent}>\n                    <Switch>\n                        <Redirect exact from='/' to='/profile'/>\n                        <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\n                        <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\n                        <Route path=\"/news\" render={() => <News/>}/>\n                        <Route path=\"/music\" render={() => <Music/>}/>\n                        <Route path=\"/settings\" render={() => <Settings/>}/>\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                        <Route path=\"/login\" render={() => <LoginPage/>}/>\n                        <Route path=\"*\" render={() => <div>404 NOT FOUND</div>}/>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: getIsInitializing(state)\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeAppThunkCreator}))(App);\n\nconst MainApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n};\n\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from \"./App\";\n\n/*setInterval(() => {\n    store.dispatch({type: \"FAKE\"})\n}, 1000);*/\n\nReactDOM.render(\n    <React.StrictMode>\n        <MainApp/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const getUserId = (state) => {\r\n    return state.auth.userId;\r\n};\r\n\r\nexport const getEmail = (state) => {\r\n    return state.auth.email;\r\n};\r\n\r\nexport const getLogin = (state) => {\r\n    return state.auth.login;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.auth.isFetching;\r\n};\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n};\r\n\r\nexport const getCaptchaURL = (state) => {\r\n    return state.auth.captchaURL;\r\n};","import React from \"react\";\r\nimport classes from \"./formControls.module.css\"\r\nimport {required} from \"../../../Utils/Validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\n/*export const TextArea = ({input, meta, ...props}) => {\r\n\r\n    const isError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (isError ? classes.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {isError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const isError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (isError ? classes.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {isError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};*/\r\n\r\nexport const Element = Element => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <Element {...input} {...props} />\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const createField = (placeholder, name, component, validate, props={}, text=\"\") => (\r\n    <div>\r\n    <Field placeholder={placeholder} name={name}\r\n           component={component}\r\n           validate={validate}\r\n           {...props}/> {text}\r\n    </div>\r\n);","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required!';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return 'Max length is 140 symbols!';\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formControls_formControl__325JN\",\"error\":\"formControls_error__3-WrT\",\"formSummaryError\":\"formControls_formSummaryError__1hbdK\"};","import preLoader from \"../../../Assets/Images/loaderTransparentRed.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preLoader}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__6tNFf\",\"pageNumber\":\"Paginator_pageNumber__1fvRL\",\"selectedPage\":\"Paginator_selectedPage__11Hwg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__2Vivo\",\"appWrapperContent\":\"App_appWrapperContent__1x9pX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__uZtsy\",\"loginBlock\":\"Header_loginBlock__3Mbap\"};","import {profileAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'social-network/profile/ADD-POST';\r\nconst REMOVE_POST = 'social-network/profile/REMOVE-POST';\r\nconst SET_USER_PROFILE = 'social-network/profile/SET-USER-PROFILE';\r\nconst SET_STATUS = 'social-network/profile/SET-STATUS';\r\nconst SET_PHOTO = 'social-network/profile/SET_PHOTO';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, post: 'Hi, how are you', likesCount: 12},\r\n        {id: 2, post: 'It\\'s my first post', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: state.posts.length + 1,\r\n                post: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n\r\n        case REMOVE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.postId)\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        case SET_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (text) => ({\r\n    type: ADD_POST,\r\n    newPostText: text\r\n});\r\n\r\nexport const removePost = (id) => ({\r\n    type: REMOVE_POST,\r\n    postId: id\r\n});\r\n\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile: profile\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status: status\r\n});\r\n\r\nexport const setPhoto = (photos) => ({\r\n    type: SET_PHOTO,\r\n    photos: photos\r\n});\r\n\r\nexport const obtainProfileDataThunkCreator = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfileByUserId(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getProfileStatusThunkCreator = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateProfileStatusThunkCreator = (status) => async (dispatch) => {\r\n    let response = await profileAPI.setStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n};\r\n\r\nexport const savePhotoThunkCreator = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setPhoto(response.data.data.photos))\r\n    }\r\n};\r\n\r\nexport const saveProfileThunkCreator = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    let response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(obtainProfileDataThunkCreator(userId))\r\n    } else {\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : \"Common error\";\r\n        dispatch(stopSubmit(\"editProfileForm\", {_error: errorMessage}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}